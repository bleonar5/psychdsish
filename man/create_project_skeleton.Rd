% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_project_skeleton.R
\name{create_project_skeleton}
\alias{create_project_skeleton}
\title{Create an opinionated project directory skeleton following psych-ds-ish standard}
\usage{
create_project_skeleton(project_root = "../", overwrite = FALSE)
}
\arguments{
\item{project_root}{Character scalar. Path to the root directory where
the project skeleton should be created. Defaults to \code{"../"} on the
assumption that this function is run from
"project_name/tools/project_creator.qmd", but can also be run from the
console.}

\item{overwrite}{Logical. If \code{TRUE}, existing files will be overwritten.
Defaults to \code{FALSE}.}
}
\value{
(Invisibly) a \code{data.frame} listing the created paths and their type
(\code{"dir"} or \code{"file"}).
}
\description{
This function creates a standardised-ish directory and file structure for a
research project. The layout is loosely inspired by the
\href{https://psych-ds.github.io/}{psych-DS} specification, but is \strong{not}
fully psych-DS compliant. It adds extra conventions for reproducibility
and common analysis workflows, including Quarto file templates and
a \code{.gitignore} file. It does not comply with psych-ds's .json requirement.
}
\details{
The created structure is designed to separate raw data, processed data,
analysis code, outputs, and documentation, while including sensible
defaults for licensing, reproducibility, and version control.

The following directories are created (if not already present):
\itemize{
\item \verb{code/} - analysis and processing scripts (\code{.qmd}/\code{.Rmd})
\item \verb{reports/} - manuscripts, slides, preprints, etc.
\item \verb{data/}
\itemize{
\item \verb{data/raw/} - immutable raw data + dictionaries/codebooks
\item \verb{data/processed/} - cleaned datasets and dictionaries
\item \verb{data/outputs/} - outputs from processing/analysis scripts
\itemize{
\item \verb{plots/} - figures (\code{.png}, \code{.pdf}, etc.)
\item \verb{fitted_models/} - saved model objects (e.g., \code{.rds})
\item \verb{results/} - tables, summaries, descriptive statistics
}
}
\item \verb{methods/} - measurement instruments, implementation files
\item \verb{preregistration/} - preregistration documents
\item \verb{tools/} - utility scripts and reproducibility helpers
}

The following files are created (if not already present):
\itemize{
\item \code{LICENSE} - CC BY 4.0 license text
\item \code{readme.md} - skeleton README describing project aims and structure
\item \code{.gitignore} - ignores R history, session data, caches, temp files,
OS-specific clutter, and large output directories
\item \code{code/analysis.qmd} - Quarto analysis template with metadata, setup
chunk, and \code{sessionInfo()} chunk
\item \code{code/processing.qmd} - Quarto processing template (same structure)
\item \code{tools/style_all_files.qmd} - reproducibility tool to apply
{tidyverse} code style to all \code{.qmd}, \code{.Rmd}, and \code{.R} files
\item \code{tools/detect_unused_dependencies.qmd} - reproducibility tool to
check whether there are unused dependencies in a project
}

Quarto \code{.qmd} files are pre-filled with:
\itemize{
\item YAML front matter including title, author, date, HTML output settings
\item Global options to suppress scientific notation, warnings, and messages
\item Setup chunk for loading packages and configuring the session
\item Session information chunk
}
}
\examples{
\dontrun{
# Create a skeleton in a parent directory
create_project_skeleton(project_root = "../", overwrite = FALSE)

# Create in the current working directory and overwrite any existing templates
create_project_skeleton(project_root = ".", overwrite = TRUE)

# Create in a specified directory
create_project_skeleton("~/path/to/github_repository_name", overwrite = FALSE)
}

}
\seealso{
\href{https://psych-ds.github.io/}{psych-DS specification}
}
